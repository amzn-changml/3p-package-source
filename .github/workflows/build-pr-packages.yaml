# This automation builds 3p packages based on a PR or manually run

name: Build 3P Packages PR

on:
  # Allows you to run this workflow manually from the Actions tag
  workflow_dispatch:
    inputs:
      build_path:
        description: 'The json file to build'
        type: choice
        options: 
        - "package_build_list_host_windows.json"
        - "package_build_list_host_linux.json"
        - "package_build_list_host_linux-aarch64.json"
        - "package_build_list_host_darwin.json"

  pull_request:
    paths:
      - 'package_build_list_host_*.json'

permissions:
  actions: 'write'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect-platform.outputs.matrix }}
    
    steps:
    - name: Checkout 3P source repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 10

    - name: Detect platform and command from JSON changes
      id: detect-platform
      run: |
        CHANGED_FILES=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --name-only)
        JSON="{\"include\":["
        for FILE in $CHANGED_FILES; do
        	if [[ $FILE == package_build_list_host_* ]]; then
        		PLATFORM=$(echo $FILE | sed -n 's/package_build_list_host_\(.*\).json/\1/p')
        		case $PLATFORM in
        		linux*)
        			OS_RUNNER="ubuntu-latest"
        			;;
        		windows)
        			OS_RUNNER="windows-2019"
        			;;
        		darwin)
        			OS_RUNNER="macos-latest"
        			;;
        		*)
        			OS_RUNNER="windows-latest" # default
        			;;
        		esac
        
        		DIFF=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --no-ext-diff --unified=0 --exit-code -a --no-prefix -- $FILE | egrep "^\+" | grep Scripts)
        		PACKAGE=$(echo $DIFF | cut -d'"' -f2)
        
        		JSONline="{\"package\": \"$PACKAGE\", \"os\": \"$OS_RUNNER\"},"
        		if [[ "$JSON" != *"$JSONline"* ]]; then
        			JSON="$JSON$JSONline"
        		fi
        	fi
        done

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
          JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo $JSON

        # Set output
        echo "matrix=$( echo "$JSON" )" >> $GITHUB_OUTPUT

  run-on-specific-os:
    name: Build "${{ matrix.package }}" on "${{ matrix.os }}"
    needs: detect-changes
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout 3P source repo
      uses: actions/checkout@v4
      with:
        path: 3p-package-source
    
    - name: Checkout 3P scripts repo
      uses: actions/checkout@v4
      with:
        repository: o3de/3p-package-scripts
        path: 3p-package-scripts
      
    - name: Update python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip' # caching pip dependencies
    
    - name: Install python dependancies
      run: |
        python3 -m pip install boto3 certifi
    
    - name: Update cmake/ninja
      uses: lukka/get-cmake@latest 

    - name: Update msbuild path
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1.12.0

    - name: Run build command
      if: ${{ !contains(matrix.package, 'aarch64') }}
      run: |
        python3 3p-package-scripts/o3de_package_scripts/build_package.py --search_path 3p-package-source ${{ matrix.package }}

    - name: Run build command (aarch64)
      if: contains(matrix.package, 'aarch64')
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: none
        distro: none
        githubToken: ${{ github.token }}
        base_image: --platform=linux/arm64 ubuntu:22.04
        setup: |
          mkdir -p "3p-package-source/packages"
          rm ${PWD}/3p-package-source/package_build_list_host_linux.json
        dockerRunArgs: |
          --volume "${PWD}/3p-package-scripts:/3p-package-scripts"
          --volume "${PWD}/3p-package-source:/3p-package-source"
          --volume "${PWD}/3p-package-source/packages:/packages"
        shell: /bin/sh
        install: |
          apt-get update
          apt-get install -y build-essential libssl-dev libffi-dev ninja-build python3 python3-pip software-properties-common
          python3 -m pip install boto3 certifi  
        run: |
          python3 /3p-package-scripts/o3de_package_scripts/build_package.py --search_path /3p-package-source/ --output_folder /packages ${{ matrix.package }}
        
    - uses: actions/upload-artifact@v3
      with:
        name: packages
        path: 3p-package-source/packages/*
