# This automation builds 3p packages based on a PR or manually run

name: Build 3P Packages PR

on:
  # Allows you to run this workflow manually from the Actions tag
  workflow_dispatch:
    inputs:
      build_path:
        description: 'The json file to build'
        type: choice
        options: 
        - "package_build_list_host_windows.json"
        - "package_build_list_host_linux.json"
        - "package_build_list_host_linux-aarch64.json"
        - "package_build_list_host_darwin.json"

  pull_request:
    paths:
      - 'package_build_list_host_*.json'

permissions:
  actions: 'write'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect-platform.outputs.matrix }}
    
    steps:
    - name: Checkout 3P source repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 10

    - name: Detect platform and command from JSON changes
      id: detect-platform
      run: |
        CHANGED_FILES=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --name-only)
        JSON="{\"include\":["
        for FILE in $CHANGED_FILES; do
        	if [[ $FILE == package_build_list_host_* ]]; then
        		PLATFORM=$(echo $FILE | sed -n 's/package_build_list_host_\(.*\).json/\1/p')
        		case $PLATFORM in
        		linux*)
        			OS_RUNNER="ubuntu-latest"
        			;;
        		windows)
        			OS_RUNNER="windows-latest"
        			;;
        		darwin)
        			OS_RUNNER="macos-latest"
        			;;
        		*)
        			OS_RUNNER="windows-latest" # default
        			;;
        		esac
        
        		DIFF=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --no-ext-diff --unified=0 --exit-code -a --no-prefix -- $FILE | egrep "^\+" | grep Scripts)
        		PACKAGE=$(echo $DIFF | cut -d'"' -f2)
        		COMMAND=$(echo $DIFF | cut -d'"' -f4)
        
        		JSONline="{\"package\": \"$PACKAGE\", \"command\": \"$COMMAND\", \"os\": \"$OS_RUNNER\"},"
        		if [[ "$JSON" != *"$JSONline"* ]]; then
        			JSON="$JSON$JSONline"
        		fi
        	fi
        done

        # Remove last "," and add closing brackets
        if [[ $JSON == *, ]]; then
          JSON="${JSON%?}"
        fi
        JSON="$JSON]}"
        echo $JSON

        # Set output
        echo "matrix=$( echo "$JSON" )" >> $GITHUB_OUTPUT

  run-on-specific-os:
    name: Build "${{ matrix.package }}" on "${{ matrix.os }}"
    needs: detect-changes
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout 3P source repo
      uses: actions/checkout@v3

    - name: Run build command
      run: |
        python ${{ matrix.command }}
          
      
