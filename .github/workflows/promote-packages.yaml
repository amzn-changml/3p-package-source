# This automation promotes 3p packages based on a merge 

name: Promote 3P Packages

on:
  # Allows you to run this workflow manually from the Actions tag
  workflow_dispatch:

  push:
    branches:
      - main
      - development
    paths:
      - 'package_build_list_host_*.json'

jobs:
  deploy-dev:
    name: Deploying to dev S3 bucket
    runs-on: ubuntu-latest
    environment: development 
    steps:          
      - name: Download packages
        uses: dawidd6/action-download-artifact@v2.28.0
        with:
          workflow: build-pr-packages.yaml
          workflow_conclusion: success
          commit: ${{github.event.pull_request.head.sha}}
          check_artifacts: true
          path: packages/
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-access-key-id    :  ${{ secrets.AWS_CREDS_ACCESS_KEY }}
           aws-secret-access-key:  ${{ secrets.AWS_CREDS_SECRET_KEY }}
           aws-region           :  ${{ secrets.AWS_CREDS_REGION_NAME }}
           
      - name: Copy to S3
        env:
          PACKAGE_PATH: packages/
        run: |
          find ${{ env.PACKAGE_PATH }} -type f | while read file; do
            filename=$(basename "$file")
            aws s3 cp "$file" "s3://${{ secrets.AWS_PACKAGE_DEV_S3_BUCKET }}/$filename" --acl bucket-owner-full-control
            UPLOADED_FILES="$UPLOADED_FILES$filename,"
          done
          echo $UPLOADED_FILES
          echo "uploaded_files=$UPLOADED_FILES" >> "$GITHUB_OUTPUT"
           
  deploy-prod:
    name: Deploying to prod S3 bucket
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-dev]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-access-key-id    :  ${{ secrets.AWS_CREDS_ACCESS_KEY }}
           aws-secret-access-key:  ${{ secrets.AWS_CREDS_SECRET_KEY }}
           aws-region           :  ${{ secrets.AWS_CREDS_REGION_NAME }}
           
      - name: Promote dev package to prod
        run: |
          UPLOADED_FILES="${{ needs.deploy-dev.outputs.uploaded_files }}"
          IFS=',' read -ra FILES <<< "$UPLOADED_FILES"
          for filename in "${FILES[@]}"; do
              echo aws s3 cp --dryrun "s3://${{ secrets.AWS_PACKAGE_DEV_S3_BUCKET }}/$filename" "s3://${{ secrets.AWS_PACKAGE_PROD_S3_BUCKET }}/$filename" --acl bucket-owner-full-control
          done
